events { }

http {
    
    types {
        text/html   html htm shtml;
        text/css    css;
        text/xml    xml;
        image/gif   gif;
        image/jpeg  jpeg jpg;
        application/javascript js;
        application/json json;
        application/x-font-ttf ttf;
        application/x-font-woff woff;
        application/x-font-woff2 woff2;
        application/vnd.ms-fontobject eot;
        font/opentype otf;
        image/svg+xml svg svgz; 
        image/x-icon ico;
    }

    default_type  application/octet-stream;
    client_max_body_size 100M;

    upstream sportapp {
        server sportapp:8080;
    }

    server {
        listen 80;
    
        server_name 80.190.83.72;
    
        root /usr/share/nginx/html;  # This will serve the React app and all static files
    
        index index.html;
    
        # Serve the main entry point of the React app
        location / {
            try_files $uri /index.html;
        }
        
        # Serve static assets like CSS, JS, images
        location /assets/ {
            expires 30d;  # Cache static assets for 30 days
            access_log off;  # Disable logging for static assets
        }
    
        # Proxy API requests to the backend
        location /api/ {
            proxy_pass http://sportapp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    
        # Serve images
        location /Images/ {
            alias /app/Images/;
            autoindex on;
        }
    
        # Serve Swagger UI
        location /swagger/ {
            proxy_pass http://sportapp/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    
        error_page 404 /index.html;
    }
}